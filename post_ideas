- Why general public sees the software engineering business wrongly
    - About opensource / proprietry
    - About exectuable / software as a service / distributed formats

- Understand your threats to apply good security
    - Government threat VS hacker group VS target hack VS batch hack VS script kiddie

- Programming paradygms explained

- How to teach programming the good way

- Acquiring new knowledge by exploring the adjacent worlds
    - Take example of software engineering
    - Show that exploring a lot of different horizons teach more in less time than digging a single subject
    - But doesn't replace digging a subject in order to become an expert

- The line between art and science
    - Talk about "Free the Mathematics"
    - Talk about art and inspiration when building software
        - Show the differences with big and tiny projects
        - Talk about big artistic projects (statues, big paintings), and how it has to be "mechanical" even if the bottom is artistic
        - Choregraphy, architecture, etc ...
